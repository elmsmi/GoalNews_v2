@model GoalNewsV2.Models.EmpCliViewModel

@{
    ViewBag.Title = "Edit";
}


<div class="jumbotron">
    <div class="container">
        <h2>Editar Empleado</h2>

        <div class="col-xs-offset-2" style="font-size:18px;">
            <table class="table">
                <tr>
                    <th>
                        Empleado
                    </th>
                    <th>
                        Clientes
                    </th>
                    <th>Opciones</th>
                </tr>
                <tr>
                    <td>@Model.employee.EmployeeName</td>
                    <td>
                        @foreach (var item in Model.employee.Clients)
                        {
                            <div>
                                @Html.DisplayFor(modelitem => item.ClientName)


                            </div>
                        }
                    </td>

                    <td>
                        @foreach (var item in Model.employee.Clients)
                        {
                            <div>
                                @Html.ActionLink("Borrar", "deleteClientFromEmployee", new { cliID = item.ClientID, empID = Model.employee.EmployeeID }, new { @class = "btn btn-danger btn-xs" })
                            </div>
                        }
                    </td>

                </tr>
            </table>
        </div>

        @using (Html.BeginForm())
            {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.employee.EmployeeID)

                <div class="form-group">
                    @Html.LabelFor(model => model.employee.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.employee.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.employee.EmployeeName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Añadir nuevos clientes", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.ListBoxFor(model => model.SelectedClients, Model.ListOfClients, new { @class = "form-control selectpicker", @multiple = "multiple", data_live_search = "true", data_placeholder = "selecciona al menos un cliente" })
                        @Html.ValidationMessageFor(model => model.SelectedClients, "", new { @class = "text-danger", required = "required" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Añadir" class="btn btn-info" />
                        @Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        }
        *
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
